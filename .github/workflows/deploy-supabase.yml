name: Deploy Supabase Edge Functions

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Lint
        run: npm run lint

      - name: Run Tests
        run: npm test

      - name: Install Supabase CLI
        run: npm install -g supabase

      - name: Verify Supabase Project ID
        run: |
          if [ -z "$SUPABASE_PROJECT_ID" ]; then
            echo "‚ùå SUPABASE_PROJECT_ID not set"; exit 1;
          fi

      - name: Deploy Supabase Functions
        run: |
          supabase functions deploy --project-ref $SUPABASE_PROJECT_ID --non-interactive
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: Deploy Database Migrations
        run: |
          supabase db push --project-ref $SUPABASE_PROJECT_ID --non-interactive
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: Success Notification
        if: success()
        run: echo "üéâ Deploy completato su Supabase!"

      - name: Failure Notification
        if: failure()
        run: echo "‚ùå Deploy fallito! Controlla i log di GitHub Actions per dettagli."

      - name: Upload GitHub Actions Logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: github-actions-logs
          path: ${{ github.workspace }}/logs
          if-no-files-found: ignore
