name: Deploy to Supabase
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Check required secrets
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          missing=0
          for var in SUPABASE_ACCESS_TOKEN SUPABASE_PROJECT_ID SUPABASE_DB_PASSWORD; do
            if [ -z "${!var}" ]; then
              echo "❌ Secret $var mancante! Configura i secrets in GitHub repository settings."
              missing=1
            fi
          done
          if [ "$missing" -eq 1 ]; then exit 1; fi
      - name: Verify package-lock.json
        run: |
          if [ ! -f "package-lock.json" ]; then
            echo "package-lock.json non trovato. Esegui npm install in locale e fai push!"
            exit 1
          fi
      - name: Install dependencies
        run: npm ci
      - name: Run Lint
        run: npm run lint
      - name: Run Tests
        run: npm test
        continue-on-error: true
      - name: Install Supabase CLI
        run: npm install supabase --save-dev
      - name: Deploy Supabase Edge Functions
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: deploy_to_supabase
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
        run: |
          echo "--- Deploying Edge Functions ---"
          npx supabase functions deploy
      - name: Apply DB migrations via Supabase API
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          for file in supabase/migrations/*.sql; do
            curl -X POST "https://${SUPABASE_PROJECT_ID}.supabase.co/rest/v1/rpc/apply_migration" \
              -H "apikey: $SUPABASE_SERVICE_ROLE_KEY" \
              -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
              -H "Content-Type: application/json" \
              --data "{\"sql\": \"$(cat $file | sed 's/"/\\"/g')\"}"
          done
      - name: Check Deploy Status
        if: success() && steps.deploy_to_supabase.conclusion == 'success'
        run: echo "✅ Deploy completato!"
      - name: Report Deploy Failure
        if: failure() || steps.deploy_to_supabase.conclusion == 'failure'
        run: |
          echo "❌ Deploy fallito: controlla i logs nell'artefatto 'supabase-deploy-logs'."
          exit 1
      - name: Upload Deploy Logs
        if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: supabase-deploy-logs
          path: deploy.log
