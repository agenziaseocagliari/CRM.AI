name: Deploy Supabase Functions

on:
  push:
    branches: [ main ]
    paths:
      - 'supabase/functions/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'supabase/functions/**'
  workflow_dispatch:

jobs:
  deploy-functions:
    runs-on: ubuntu-latest
    
    environment:
      name: production
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: '1.x'
          
      - name: Install Supabase CLI
        run: |
          curl -fsSL https://supabase.com/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          
      - name: Validate Functions
        run: |
          # Check syntax of TypeScript functions
          for func_dir in supabase/functions/*/; do
            if [ -f "$func_dir/index.ts" ]; then
              echo "Validating function: $(basename $func_dir)"
              deno check "$func_dir/index.ts"
            fi
          done
          
      - name: Deploy Functions (Production)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
        run: |
          echo "Deploying functions to production..."
          supabase functions deploy --project-ref $SUPABASE_PROJECT_REF
          
      - name: Test Functions (PR)
        if: github.event_name == 'pull_request'
        run: |
          echo "Testing functions syntax and structure..."
          # Add any function-specific tests here
          for func_dir in supabase/functions/*/; do
            if [ -f "$func_dir/index.ts" ]; then
              func_name=$(basename $func_dir)
              echo "Testing function: $func_name"
              
              # Check for required imports
              if ! grep -q "import.*serve" "$func_dir/index.ts"; then
                echo "Error: Function $func_name missing serve import"
                exit 1
              fi
              
              # Check for CORS handling
              if ! grep -q "corsHeaders\|handleCors" "$func_dir/index.ts"; then
                echo "Warning: Function $func_name might be missing CORS handling"
              fi
              
              # Check for error handling
              if ! grep -q "try.*catch" "$func_dir/index.ts"; then
                echo "Warning: Function $func_name might be missing error handling"
              fi
            fi
          done
          
      - name: Comment PR Status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            
            const functionFiles = files.filter(file => 
              file.filename.startsWith('supabase/functions/') && 
              file.filename.endsWith('.ts')
            );
            
            if (functionFiles.length > 0) {
              const comment = `üöÄ **Supabase Functions Validation**\n\n` +
                `‚úÖ Syntax validation passed for ${functionFiles.length} function(s)\n` +
                `üìù Modified functions:\n` +
                functionFiles.map(f => `- \`${f.filename}\``).join('\n') +
                `\n\n‚ö†Ô∏è **Note**: Functions will be deployed to production when this PR is merged to main.`;
                
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
            
      - name: Deployment Summary
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          echo "‚úÖ Deployment completed successfully!"
          echo "üìä Deployment Summary:"
          echo "  - Branch: main"
          echo "  - Functions deployed to production"
          echo "  - Timestamp: $(date -u)"
          echo "  - Commit: ${{ github.sha }}"
