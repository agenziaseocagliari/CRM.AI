name: MCP Workflow
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual runs

jobs:
  mcp-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        # Remove cache to avoid lock file error
        
    - name: Install dependencies
      run: |
        if [ -f "package.json" ]; then
          npm install
        else
          echo "No package.json found, skipping npm install"
        fi
      
    - name: Build project
      run: |
        if [ -f "package.json" ]; then
          npm run build
        else
          echo "No package.json found, skipping build"
        fi
      
    - name: Run tests
      run: |
        if [ -f "package.json" ]; then
          npm test
        else
          echo "No package.json found, skipping tests"
        fi
      
    - name: MCP Server validation
      env:
        MCP_TEST_API_KEY: ${{ secrets.MCP_TEST_API_KEY }}
      run: |
        echo "Validating MCP Server configuration..."
        echo "MCP_TEST_API_KEY is set: $(if [ -n "$MCP_TEST_API_KEY" ]; then echo 'Yes'; else echo 'No'; fi)"
        # Add MCP-specific validation commands here
        if [ -f "package.json" ]; then
          echo "Package.json found - checking MCP dependencies"
          npm list | grep -i mcp || echo "No MCP dependencies found"
        fi
        
    - name: Deploy to staging (MCP)
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Deploying to MCP staging environment..."
        # Add deployment commands for MCP here
        
    - name: Notify MCP deployment status
      if: always()
      run: |
        echo "MCP workflow completed with status: ${{ job.status }}"
        # Add notification logic here
