# Questo workflow automatizza il deploy delle edge functions e delle migrazioni del database su Supabase.
# Si attiva su push e pull request verso la branch 'main'.
#
# Fasi principali:
# 1. Setup: Installa Node.js v20 e le dipendenze del progetto tramite 'npm ci'.
# 2. Quality Gates: Esegue il linting ('npm run lint') e i test ('npm run test').
# 3. Deploy: Se i quality gates sono superati e l'evento è un push su 'main',
#    procede con il deploy delle funzioni e delle migrazioni del database su Supabase.
# 4. Artifacts: Carica i log del deploy come artefatto per facilitare il debug.

name: Deploy to Supabase

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Lint
        run: npm run lint

      - name: Run Tests
        run: npm test
      
      - name: Create Log File
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: touch deploy.log

      - name: Deploy to Supabase
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: deploy_to_supabase
        run: |
          set -o pipefail
          {
            echo "--- Installing Supabase CLI ---"
            npm install -g supabase@latest

            echo "--- Checking for SUPABASE_PROJECT_ID ---"
            if [ -z "$SUPABASE_PROJECT_ID" ]; then
              echo "Error: SUPABASE_PROJECT_ID secret is not set."
              exit 1
            fi

            echo "--- Deploying Edge Functions ---"
            supabase functions deploy --project-ref $SUPABASE_PROJECT_ID --non-interactive

            echo "--- Deploying Database Migrations ---"
            supabase db push --project-ref $SUPABASE_PROJECT_ID --non-interactive

          } 2>&1 | tee deploy.log
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      
      - name: Check Deploy Status
        if: success() && steps.deploy_to_supabase.conclusion == 'success'
        run: echo "✅ Deploy completato"

      - name: Report Deploy Failure
        if: failure() || steps.deploy_to_supabase.conclusion == 'failure'
        run: |
          echo "❌ Deploy fallito: controlla i logs nell'artefatto 'supabase-deploy-logs'."
          exit 1
          
      - name: Upload Deploy Logs
        if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: supabase-deploy-logs
          path: deploy.log
